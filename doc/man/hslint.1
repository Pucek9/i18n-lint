.TH HSLINT 1 "14 January 2015"
.SH NAME
hslint \- Lint HTML and template source files for hardcoded (untranslated)
strings
.SH SYNOPSIS
\fBhslint\fP [OPTIONS] [FILES]
.SH DESCRIPTION
\fBhslint\fP scans the DOM structure of the input files, and tries to find text
nodes and attributes whose values look like hardcoded strings.  Various options
allow for control of which tags and attributes to check, and which template
delimiters the source files.

.SH OPTIONS
.SS \fBGeneric Program Information\fP
.TP
\fB-h, --help\fP
Print help text then exit
.TP
\fB-V, --version\fP
Print version number and exit

.SS \fBOutput Control\fP
.TP
\fB-r, --reporter \fIREPORTER\fP
Specify which reporter to use to output data.  Defaults to 'default'.
.SS \fBOther Options\fP
.TP
\fB-a, --attributes \fIATTRIBUTES\fP
A comma-separated list of attributes which should be checked.  Defaults to '
title,alt'.
.TP
\fB-i, --ignore-tags \fITAGS\fP
A comma-separated list of tags to ignore when searching for hardcoded strings.
Defaults 'script,style'.
.TP
\fB-t, --template-delimiters \fIDELIMITERS\fP
Tell \fBhslint\fP that the source files use template delimiters.  For example,
templating languages with Mustache-style syntax should set this to '{{,}}'.
.TP
\fB--exclude \fIPATTERNS\fP
A comma-separated list of file patterns to ignore, such 'docs/,ignored.html'
.TP
\fB--color/no-color\fP
Maintain or turn off colored output. See https://www.npmjs.com/package/chalk#chalk-supportscolor.

.SH EXAMPLES

.RE
.SS \fBhslint *.html\fP
Lint HTML files using default options

.SS \fBhslint -t \(dq<%,%>\(dq *.ejs\fP
Lint EJS files, telling \fBhslint\fP that template content is delimited by '<%'
and '%>'

.SS \fBhslint -a \(dqtitle,content,alt\(dq *.html\fP
Lint HTML files, and check the title, content and alt attributes of each element

.SS \fBhslint -i \(dqdiv,h1\(dq -t \(dq{{,}}\(dq *.hbs\fP
Lint all .hbs files, using Mustache-like template delimiters and ignoring the
text and attributes of any <div> or <h1> elements

.SH EXIT STATUS
.RE
\fB0\fP    if everything went ok and no hardcoded strings were found (\fBEX_OK\fP)
.RE
\fB1\fP    if hardcoded strings were found
.RE
\fB64\fP   if the command was used incorrectly (\fBEX_USAGE\fP)
.RE
\fB65\fP   if the input data was incorrect (EX_DATAERR)
.RE
\fB66\fP   if no input file(s) or input was not readable (\fBEX_NOINPUT\fP)
.RE
\fB73\fP   if the specified output file could not be created (\fBEX_CANTCREAT\fP)
.RE
\fB78\fP   if there was an error with the specified configuration (\fBEX_CONFIG\fP)
.RE
\fB79\fP   if an unknown error occurred (\fBEX_UNKNOWN\fP)

.SH LICENSE
.RE
Copyright (c) 2015 James Warwood
.RE
Licensed under the MIT license \fIhttp://en.wikipedia.org/wiki/MIT_License\fP

.SH BUGS AND FEATURE REQUESTS
Please log bugs and feature requests at \fIhttps://github.com/jwarby/hslint/issues\fP

.SH ACKNOWLEDGEMENTS

Built using \fIhttps://github.com/Hypercubed/generator-commander\fP
